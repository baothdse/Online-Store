package com.cos.entities;
// Generated Jun 23, 2017 6:43:50 PM by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "cosmetic_online_store")
public class User implements java.io.Serializable {

	private Integer userId;
	private String username;
	private String password;
	private Integer roleId;
	private List<News> newses = new ArrayList<News>(0);
	private List<Videos> videoses = new ArrayList<Videos>(0);

	public User() {
	}

	public User(String username, String password, Integer roleId, List<News> newses, List<Videos> videoses) {
		this.username = username;
		this.password = password;
		this.roleId = roleId;
		this.newses = newses;
		this.videoses = videoses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "userId", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "username")
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "roleId")
	public Integer getRoleId() {
		return this.roleId;
	}

	public void setRoleId(Integer roleId) {
		this.roleId = roleId;
	}

	@JsonManagedReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public List<News> getNewses() {
		return this.newses;
	}

	public void setNewses(List<News> newses) {
		this.newses = newses;
	}

	@JsonManagedReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public List<Videos> getVideoses() {
		return this.videoses;
	}

	public void setVideoses(List<Videos> videoses) {
		this.videoses = videoses;
	}

}
